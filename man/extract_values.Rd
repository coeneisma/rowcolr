% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_values.R
\name{extract_values}
\alias{extract_values}
\title{Extract Values from an Excel File Based on Row and Column Identifiers}
\usage{
extract_values(
  file,
  pattern_row = ".*_row$",
  pattern_col = ".*_col$",
  row_identifiers = NULL,
  col_identifiers = NULL,
  clean_description = TRUE
)
}
\arguments{
\item{file}{Path to the Excel file.}

\item{pattern_row}{A regex pattern to identify row labels (default:
".*_row$").}

\item{pattern_col}{A regex pattern to identify column labels (default:
".*_col$").}

\item{row_identifiers}{A character vector of row label identifiers (default:
NULL).}

\item{col_identifiers}{A character vector of column label identifiers
(default: NULL).}

\item{clean_description}{Logical. If TRUE, removes text matching
\code{pattern_row} and \code{pattern_col} from row and column labels (default: TRUE).}
}
\value{
A tibble containing extracted values, including sheet name, row,
column, and description.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

This function reads an Excel file and extracts structured data by
identifying row and column labels. It ensures that each row label is only
matched with the closest column label to its right and only with column
labels from the nearest preceding row that contains column headers.
}
\examples{
# Extract values using regex patterns
dataset <- extract_values(rowcolr_example("example.xlsx"))

# Extract values using a predefined list of labels
dataset <- extract_values(rowcolr_example("example.xlsx"),
                          row_identifiers = c("Total Assets", "Total Liabilities"),
                          col_identifiers = c("Year 2023", "Year 2024"))
}
