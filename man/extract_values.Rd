% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_values.R
\name{extract_values}
\alias{extract_values}
\title{Extract Values from an Excel File Based on Row and Column Identifiers}
\usage{
extract_values(
  file,
  row_pattern = NULL,
  col_pattern = NULL,
  row_identifiers = NULL,
  col_identifiers = NULL,
  clean_description = TRUE
)
}
\arguments{
\item{file}{Path to the Excel file.}

\item{row_pattern}{A regex pattern to identify row labels. \strong{Used only if \code{row_identifiers} does not fully capture all row labels}. (Example: \code{".*_row$"}).}

\item{col_pattern}{A regex pattern to identify column labels. \strong{Used only if \code{col_identifiers} does not fully capture all column labels}. (Example: \code{".*_col$"}).}

\item{row_identifiers}{A character vector of row label identifiers. If
provided, takes precedence over \code{row_pattern}, but \strong{does not disable it}.}

\item{col_identifiers}{A character vector of column label identifiers. If
provided, takes precedence over \code{col_pattern}, but \strong{does not disable it}.}

\item{clean_description}{Logical. If TRUE, removes text matching
\code{row_pattern} and \code{col_pattern} from row and column labels (default: TRUE).}
}
\value{
A tibble containing extracted values, including sheet name, row,
column, and description.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

This function reads an Excel file and extracts structured data by
identifying row and column labels. It ensures that each row label is only
matched with the closest column label to its right and only with column
labels from the nearest preceding row that contains column headers.

You can use \strong{both regex patterns and explicit identifiers together}.
\itemize{
\item If \code{row_identifiers} and/or \code{col_identifiers} are provided, they take \strong{priority} over \code{row_pattern} and \code{col_pattern}.
\item If \strong{both} explicit identifiers and regex patterns are provided, the function will \strong{first} match on identifiers. Any additional matches from regex patterns will be included.
}
}
\examples{
# Extract values using regex patterns
dataset <- extract_values(rowcolr_example("example.xlsx"), row_pattern = ".*_row$", col_pattern = ".*_col$")
dataset

# Extract values using a predefined list of labels (ignoring regex)
dataset <- extract_values(rowcolr_example("example.xlsx"),
                          row_identifiers = c("Total assets (4+9)", "Total equity (10+11+12)"),
                          col_identifiers = c("2025_col"))
dataset

# Extract values using BOTH identifiers and regex
dataset <- extract_values(rowcolr_example("example.xlsx"),
                          row_identifiers = c("Total assets (4+9)"),
                          row_pattern = ".*_row$")
dataset
}
