[{"path":"https://coeneisma.github.io/rowcolr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 rowcolr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://coeneisma.github.io/rowcolr/articles/rowcolr.html","id":"example-extracting-data-from-an-excel-file","dir":"Articles","previous_headings":"","what":"Example: Extracting Data from an Excel File","title":"rowcolr","text":"","code":"library(rowcolr)  # Extract values from an Excel file using default row/column regex patterns dataset <- extract_values(\"path/to/your/excel_file.xlsx\") head(dataset)"},{"path":"https://coeneisma.github.io/rowcolr/articles/rowcolr.html","id":"example-using-specific-row-and-column-identifiers","dir":"Articles","previous_headings":"","what":"Example: Using Specific Row and Column Identifiers","title":"rowcolr","text":"predefined row column labels, can use directly providing character vector.","code":"# Extract values using predefined row and column identifiers dataset <- extract_values(\"path/to/your/excel_file.xlsx\",                            row_identifiers = c(\"Total Assets\", \"Net Profit\"),                            col_identifiers = c(\"2023\", \"2024\")) head(dataset)"},{"path":"https://coeneisma.github.io/rowcolr/articles/rowcolr.html","id":"example-cleaning-descriptions-by-removing-suffix-patterns","dir":"Articles","previous_headings":"","what":"Example: Cleaning Descriptions by Removing Suffix Patterns","title":"rowcolr","text":"can also clean row column labels combining description.","code":"# Extract values with cleaned descriptions dataset <- extract_values(\"path/to/your/excel_file.xlsx\", clean_description = TRUE) head(dataset)"},{"path":"https://coeneisma.github.io/rowcolr/articles/rowcolr.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"rowcolr","text":"rowcolr package powerful tool extracting structured data Excel files based customizable row column patterns. designed flexible, allowing regex-based matching predefined lists identifiers.","code":""},{"path":"https://coeneisma.github.io/rowcolr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Coen Eisma. Author, maintainer.","code":""},{"path":"https://coeneisma.github.io/rowcolr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Eisma C (2025). rowcolr: Extract Structured Data Excel Using Row Column Identifiers. R package version 0.0.0.9001, https://github.com/coeneisma/rowcolr, https://coeneisma.github.io/rowcolr/.","code":"@Manual{,   title = {rowcolr: Extract Structured Data from Excel Using Row and Column Identifiers},   author = {Coen Eisma},   year = {2025},   note = {R package version 0.0.0.9001, https://github.com/coeneisma/rowcolr},   url = {https://coeneisma.github.io/rowcolr/}, }"},{"path":"https://coeneisma.github.io/rowcolr/index.html","id":"rowcolr","dir":"","previous_headings":"","what":"Extract Structured Data from Excel Using Row and Column Identifiers","title":"Extract Structured Data from Excel Using Row and Column Identifiers","text":"goal rowcolr extract structured data Excel files identifying row column labels using regex patterns predefined identifiers. package designed support easy extraction data based matching row column labels, facilitating data wrangling cleaning tasks spreadsheet data.","code":""},{"path":"https://coeneisma.github.io/rowcolr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extract Structured Data from Excel Using Row and Column Identifiers","text":"can install development version rowcolr GitHub :","code":"devtools::install_github(\"coeneisma/rowcolr\")"},{"path":"https://coeneisma.github.io/rowcolr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Extract Structured Data from Excel Using Row and Column Identifiers","text":"primary function rowcolr extract_values(), allows extract structured data Excel files based row column label patterns.","code":""},{"path":"https://coeneisma.github.io/rowcolr/index.html","id":"example-extracting-data-from-an-excel-file","dir":"","previous_headings":"Usage","what":"Example: Extracting Data from an Excel File","title":"Extract Structured Data from Excel Using Row and Column Identifiers","text":"informatie can found [get started].","code":"library(rowcolr)  # Extract values from an Excel file using default row/column regex patterns dataset <- extract_values(\"path/to/your/excel_file.xlsx\") head(dataset)"},{"path":"https://coeneisma.github.io/rowcolr/reference/extract_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Values from an Excel File Based on Row and Column Identifiers — extract_values","title":"Extract Values from an Excel File Based on Row and Column Identifiers — extract_values","text":"function reads Excel file extracts structured data identifying row column labels using specific suffix patterns matching predefined list identifiers.","code":""},{"path":"https://coeneisma.github.io/rowcolr/reference/extract_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Values from an Excel File Based on Row and Column Identifiers — extract_values","text":"","code":"extract_values(   file,   pattern_row = \".*_row$\",   pattern_col = \".*_col$\",   row_identifiers = NULL,   col_identifiers = NULL,   clean_description = TRUE )"},{"path":"https://coeneisma.github.io/rowcolr/reference/extract_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Values from an Excel File Based on Row and Column Identifiers — extract_values","text":"file Path Excel file. pattern_row regex pattern identify row labels (default: \".*_row$\"). pattern_col regex pattern identify column labels (default: \".*_col$\"). row_identifiers character vector row label identifiers (default: NULL). col_identifiers character vector column label identifiers (default: NULL). clean_description Logical. TRUE, removes identified suffix description (default: TRUE).","code":""},{"path":"https://coeneisma.github.io/rowcolr/reference/extract_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Values from an Excel File Based on Row and Column Identifiers — extract_values","text":"tibble containing extracted values, including sheet name, row, column, description.","code":""},{"path":"https://coeneisma.github.io/rowcolr/reference/extract_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Values from an Excel File Based on Row and Column Identifiers — extract_values","text":"","code":"if (FALSE) { # \\dontrun{ # Extract values using regex patterns dataset <- extract_values(\"data/example.xlsx\")  # Extract values using a predefined list of labels dataset <- extract_values(\"data/example.xlsx\",                           row_identifiers = c(\"Total Assets\", \"Total Liabilities\"),                           col_identifiers = c(\"Year 2023\", \"Year 2024\")) } # }"}]
